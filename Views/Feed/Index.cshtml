@using Microsoft.AspNetCore.Identity
@model List<IdentityUser>
@{
    ViewData["Title"] = "Seu Feed";
    var mensagens = ViewBag.Mensagens as List<Mensagem>;
    var nomeUsuario = ViewBag.nome as string;
    var linkImagemUsuario = ViewBag.LinkImagem as string;
    var Postagens = ViewBag.Postagens as List<Postagem>;
    var linkPerfil = $"/User/Index/{ViewBag.linkPerfil}" as string;
    var likes = ViewBag.Likes as List<Likes>;
}


<div class="container-feed">
    <main role="main" class="pb-3 container-main">
        <div id="feed">
            <div class="card mb-3">
                <form class="card-body" asp-action="Postar">
                    <div class="mb-3">
                        <label for="InputPost" class="form-label">Postar</label>
                        <textarea class="form-control" id="InputPost" rows="5" name="TxtPost" placeholder="O que você está pensando?"></textarea>
                        <label for="InputPost" class="form-label">Link da imagem (Opcional)</label>
                        <input class="form-control" name="ImgPost" placeholder="Link da imagem aqui..." />
                    </div>
                    <button type="submit" class="btn btn-info">Postar</button>
                </form>
            </div>
            @if (Postagens != null)
            {
                @foreach (Postagem postagem in Postagens)
                {
                    if (Model.Contains(postagem.UsuarioPost) || postagem.UsuarioIdPost == ViewBag.linkPerfil) {
                        var like = likes.FirstOrDefault(l => l.PostagemId == postagem.ID && l.UsuarioId == ViewBag.linkPerfil);
                        <div class="card mb-3">
                            <div class="card-body">
                                <h5 class="card-title">@postagem.UsuarioPost.UserName <small class="text-muted">@postagem.DataPostagem</small></h5>
                                <p class="card-text">@postagem.Texto</p>
                                <p class="card-text"></p>
                                <form asp-action="LikePost">
                                    @postagem.QuantidadeLikes
                                    @if (like != null && like.TipoLike == "Like")
                                    {
                                        <button type="submit" value="Like:@postagem.ID" name="LikeBtn" class="botao-like">
                                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-hand-thumbs-up-fill" viewBox="0 0 16 16">
                                                <path d="M6.956 1.745C7.021.81 7.908.087 8.864.325l.261.066c.463.116.874.456 1.012.965.22.816.533 2.511.062 4.51a9.84 9.84 0 0 1 .443-.051c.713-.065 1.669-.072 2.516.21.518.173.994.681 1.2 1.273.184.532.16 1.162-.234 1.733.058.119.103.242.138.363.077.27.113.567.113.856 0 .289-.036.586-.113.856-.039.135-.09.273-.16.404.169.387.107.819-.003 1.148a3.163 3.163 0 0 1-.488.901c.054.152.076.312.076.465 0 .305-.089.625-.253.912C13.1 15.522 12.437 16 11.5 16H8c-.605 0-1.07-.081-1.466-.218a4.82 4.82 0 0 1-.97-.484l-.048-.03c-.504-.307-.999-.609-2.068-.722C2.682 14.464 2 13.846 2 13V9c0-.85.685-1.432 1.357-1.615.849-.232 1.574-.787 2.132-1.41.56-.627.914-1.28 1.039-1.639.199-.575.356-1.539.428-2.59z" />
                                            </svg>
                                        </button>
                                    }
                                    else
                                    {
                                        <button type="submit" value="Like:@postagem.ID" name="LikeBtn" class="botao-like">
                                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-hand-thumbs-up" viewBox="0 0 16 16">
                                                <path d="M8.864.046C7.908-.193 7.02.53 6.956 1.466c-.072 1.051-.23 2.016-.428 2.59-.125.36-.479 1.013-1.04 1.639-.557.623-1.282 1.178-2.131 1.41C2.685 7.288 2 7.87 2 8.72v4.001c0 .845.682 1.464 1.448 1.545 1.07.114 1.564.415 2.068.723l.048.03c.272.165.578.348.97.484.397.136.861.217 1.466.217h3.5c.937 0 1.599-.477 1.934-1.064a1.86 1.86 0 0 0 .254-.912c0-.152-.023-.312-.077-.464.201-.263.38-.578.488-.901.11-.33.172-.762.004-1.149.069-.13.12-.269.159-.403.077-.27.113-.568.113-.857 0-.288-.036-.585-.113-.856a2.144 2.144 0 0 0-.138-.362 1.9 1.9 0 0 0 .234-1.734c-.206-.592-.682-1.1-1.2-1.272-.847-.282-1.803-.276-2.516-.211a9.84 9.84 0 0 0-.443.05 9.365 9.365 0 0 0-.062-4.509A1.38 1.38 0 0 0 9.125.111L8.864.046zM11.5 14.721H8c-.51 0-.863-.069-1.14-.164-.281-.097-.506-.228-.776-.393l-.04-.024c-.555-.339-1.198-.731-2.49-.868-.333-.036-.554-.29-.554-.55V8.72c0-.254.226-.543.62-.65 1.095-.3 1.977-.996 2.614-1.708.635-.71 1.064-1.475 1.238-1.978.243-.7.407-1.768.482-2.85.025-.362.36-.594.667-.518l.262.066c.16.04.258.143.288.255a8.34 8.34 0 0 1-.145 4.725.5.5 0 0 0 .595.644l.003-.001.014-.003.058-.014a8.908 8.908 0 0 1 1.036-.157c.663-.06 1.457-.054 2.11.164.175.058.45.3.57.65.107.308.087.67-.266 1.022l-.353.353.353.354c.043.043.105.141.154.315.048.167.075.37.075.581 0 .212-.027.414-.075.582-.05.174-.111.272-.154.315l-.353.353.353.354c.047.047.109.177.005.488a2.224 2.224 0 0 1-.505.805l-.353.353.353.354c.006.005.041.05.041.17a.866.866 0 0 1-.121.416c-.165.288-.503.56-1.066.56z" />
                                            </svg>
                                        </button>
                                    }
                                    @if (like != null && like.TipoLike == "Deslike")
                                    {
                                        <button type="submit" value="Deslike:@postagem.ID" name="LikeBtn" class="botao-like">
                                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-hand-thumbs-down-fill" viewBox="0 0 16 16">
                                                <path d="M6.956 14.534c.065.936.952 1.659 1.908 1.42l.261-.065a1.378 1.378 0 0 0 1.012-.965c.22-.816.533-2.512.062-4.51.136.02.285.037.443.051.713.065 1.669.071 2.516-.211.518-.173.994-.68 1.2-1.272a1.896 1.896 0 0 0-.234-1.734c.058-.118.103-.242.138-.362.077-.27.113-.568.113-.856 0-.29-.036-.586-.113-.857a2.094 2.094 0 0 0-.16-.403c.169-.387.107-.82-.003-1.149a3.162 3.162 0 0 0-.488-.9c.054-.153.076-.313.076-.465a1.86 1.86 0 0 0-.253-.912C13.1.757 12.437.28 11.5.28H8c-.605 0-1.07.08-1.466.217a4.823 4.823 0 0 0-.97.485l-.048.029c-.504.308-.999.61-2.068.723C2.682 1.815 2 2.434 2 3.279v4c0 .851.685 1.433 1.357 1.616.849.232 1.574.787 2.132 1.41.56.626.914 1.28 1.039 1.638.199.575.356 1.54.428 2.591z" />
                                            </svg>
                                        </button>
                                    }
                                    else
                                    {
                                        <button type="submit" value="Deslike:@postagem.ID" name="LikeBtn" class="botao-like">
                                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-hand-thumbs-down" viewBox="0 0 16 16">
                                                <path d="M8.864 15.674c-.956.24-1.843-.484-1.908-1.42-.072-1.05-.23-2.015-.428-2.59-.125-.36-.479-1.012-1.04-1.638-.557-.624-1.282-1.179-2.131-1.41C2.685 8.432 2 7.85 2 7V3c0-.845.682-1.464 1.448-1.546 1.07-.113 1.564-.415 2.068-.723l.048-.029c.272-.166.578-.349.97-.484C6.931.08 7.395 0 8 0h3.5c.937 0 1.599.478 1.934 1.064.164.287.254.607.254.913 0 .152-.023.312-.077.464.201.262.38.577.488.9.11.33.172.762.004 1.15.069.13.12.268.159.403.077.27.113.567.113.856 0 .289-.036.586-.113.856-.035.12-.08.244-.138.363.394.571.418 1.2.234 1.733-.206.592-.682 1.1-1.2 1.272-.847.283-1.803.276-2.516.211a9.877 9.877 0 0 1-.443-.05 9.364 9.364 0 0 1-.062 4.51c-.138.508-.55.848-1.012.964l-.261.065zM11.5 1H8c-.51 0-.863.068-1.14.163-.281.097-.506.229-.776.393l-.04.025c-.555.338-1.198.73-2.49.868-.333.035-.554.29-.554.55V7c0 .255.226.543.62.65 1.095.3 1.977.997 2.614 1.709.635.71 1.064 1.475 1.238 1.977.243.7.407 1.768.482 2.85.025.362.36.595.667.518l.262-.065c.16-.04.258-.144.288-.255a8.34 8.34 0 0 0-.145-4.726.5.5 0 0 1 .595-.643h.003l.014.004.058.013a8.912 8.912 0 0 0 1.036.157c.663.06 1.457.054 2.11-.163.175-.059.45-.301.57-.651.107-.308.087-.67-.266-1.021L12.793 7l.353-.354c.043-.042.105-.14.154-.315.048-.167.075-.37.075-.581 0-.211-.027-.414-.075-.581-.05-.174-.111-.273-.154-.315l-.353-.354.353-.354c.047-.047.109-.176.005-.488a2.224 2.224 0 0 0-.505-.804l-.353-.354.353-.354c.006-.005.041-.05.041-.17a.866.866 0 0 0-.121-.415C12.4 1.272 12.063 1 11.5 1z" />
                                            </svg>
                                        </button>
                                    }
                                    <button type="button" class="botao-like" id="abrirComment" name="idPostagem" value="@postagem.ID">
                                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-chat-right-dots" viewBox="0 0 16 16">
                                            <path d="M2 1a1 1 0 0 0-1 1v8a1 1 0 0 0 1 1h9.586a2 2 0 0 1 1.414.586l2 2V2a1 1 0 0 0-1-1H2zm12-1a2 2 0 0 1 2 2v12.793a.5.5 0 0 1-.854.353l-2.853-2.853a1 1 0 0 0-.707-.293H2a2 2 0 0 1-2-2V2a2 2 0 0 1 2-2h12z" />
                                            <path d="M5 6a1 1 0 1 1-2 0 1 1 0 0 1 2 0zm4 0a1 1 0 1 1-2 0 1 1 0 0 1 2 0zm4 0a1 1 0 1 1-2 0 1 1 0 0 1 2 0z" />
                                        </svg>
                                    </button>
                                </form>
                            </div>
                            @if (postagem.UrlImagem != null)
                            {
                                <img src="@postagem.UrlImagem" class="card-img-bottom post-image">
                            }
                        </div>
                    }
                }
            }
        </div>
    </main>
</div>
@{
    #region Chat geral

    <!-- Configurações CSS estão em wwwroot/css/site.css -->
    <div class="container-chat" id="container-chat">
        <div class="chat-title title" id="title">
            Chat global
            <button type="submit" class="mostrarChat" id="mostrarChat" onclick="mostrarChat()">-</button>
        </div>
        <div class="chat" id="chatMain">
            <div class="inner-chat" id="chat">
                @if (mensagens != null)
                {
                    @foreach (var mensagem in mensagens.OrderBy(m => m.DataEnvio))
                    {
                        if (mensagem.AlvoId == null)
                        {
                            var position = ViewBag.linkPerfil == mensagem.UsuarioID ? "text-right" : "text-left";
                            var alert = ViewBag.linkPerfil == mensagem.UsuarioID ? "alert-light" : "alert-dark";
                            <div class="row">
                                <div class="col-md-12 @position">
                                    <a asp-controller="User" asp-action="Index" asp-route-id="@mensagem.UsuarioID">
                                        <img src="@mensagem.usuario.LinkImagem" class="usuario-imagem @position" />
                                        <small class="text-dark">@mensagem.NomeUsuario</small>
                                    </a>
                                    <div class="alert mb-0 @alert" role="alert">
                                        <span class="d-block">@mensagem.Texto</span>
                                    </div>
                                    <small class="text-info">@mensagem.DataEnvio.ToString("dd/MM HH:mm")</small>
                                </div>
                            </div>
                        }
                    }
                }
            </div>
        </div>
        <form asp-action="EnviarMensagem" id="SendMessageForm" class="row enviar">
            <div class="input-group col-md-12 mb-4">
                <input name="Texto" id="MessageText" class="form-control" />
                <button type="submit" id="submitBtn" class="btn btn-info" value="">Enviar</button>
            </div>
        </form>
    </div>
    #endregion
}

@{
    #region Lista de amigos
    <div class="lista-amigos" id="lista">
        <div class="friend-title title" id="title-amigo">
            Lista de amigos @Model.Count
            <button class="mostrarChat" id="mostrarLista" onclick="mostrarLista()">-</button>
        </div>
        @if (Model != null)
        {
            <ul class="list-group" id="amigos">
                @foreach (Usuario amigo in Model)
                {

                    <li id="abrirPrivado-@amigo.Id" class="list-group-item d-flex justify-content-between align-items-center abrir-chat">
                        <a asp-controller="User" asp-action="Index" asp-route-id="@amigo.Id">
                            <img src="@amigo.LinkImagem" class="usuario-imagem" />
                            @amigo.UserName
                        </a>
                    </li>

                }
            </ul>
        }
    </div>
    #endregion
    #region Chats privados

    if (Model != null)
    {
        @foreach (Usuario amigo in Model)
        {
            <div class="container-chat privado" id="container-chat-@amigo.Id">
                <div class="chat-title title" id="title-@amigo.Id">
                    Chat com @amigo.UserName
                    <div>
                        <button type="submit" class="mostrarChat" id="mostrarChat-@amigo.Id">-</button>
                        <button type="submit" class="mostrarChat" id="fecharChat-@amigo.Id">x</button>
                    </div>
                </div>
                <div class="chat" id="chatMain-@amigo.Id">
                    <div class="inner-chat" id="chat-@amigo.Id">
                        @if (mensagens != null)
                        {
                            @foreach (Mensagem mensagem in mensagens.Where(m => m.AlvoId == amigo.Id && m.UsuarioID == ViewBag.linkPerfil || m.UsuarioID == amigo.Id && m.AlvoId == ViewBag.linkPerfil))
                            {
                                var position = ViewBag.linkPerfil == mensagem.UsuarioID ? "text-right" : "text-left";
                                var alert = ViewBag.linkPerfil == mensagem.UsuarioID ? "alert-light" : "alert-dark";
                                <div class="row">
                                    <div class="col-md-12 @position">
                                        <a asp-controller="User" asp-action="Index" asp-route-id="@mensagem.UsuarioID">
                                            <img src="@mensagem.usuario.LinkImagem" class="usuario-imagem @position" />
                                            <small class="text-dark">@mensagem.NomeUsuario</small>
                                        </a>
                                        <div class="alert mb-0 @alert" role="alert">
                                            <span class="d-block">@mensagem.Texto</span>
                                        </div>
                                        <small class="text-info">@mensagem.DataEnvio.ToString("dd/MM HH:mm")</small>
                                    </div>
                                </div>
                            }
                        }
                    </div>
                </div>
                <form asp-action="EnviarMensagem" id="SendMessageForm-@amigo.Id" class="row enviar">
                    <div class="input-group col-md-12">
                        <input name="Texto" id="MessageText-@amigo.Id" class="form-control" />
                        <button type="submit" id="submitBtn" class="btn btn-info" value="">Enviar</button>
                    </div>
                </form>
            </div>
        }
    }
    #endregion
}



@section scripts
{
    <!-- Chat geral -->
    <script>
        var nomeUsuario = "@nomeUsuario";
        var linkImagemUsuario = "@linkImagemUsuario";
        var linkPerfil = "@linkPerfil";
        var idAtual = "@ViewBag.linkPerfil";
        var objDiv = document.getElementById("chatMain");
        var mensagensAtuais = [];
        objDiv.scrollTop = objDiv.scrollHeight;

        /*Construir e estilizar mensagens novas enviadas por websocket*/
        function formatDate(dateString) {
            var date = new Date(Date.parse(dateString))
            var dateStr =
                ("00" + date.getDate()).slice(-2) + "/" +
                ("00" + (date.getMonth() + 1)).slice(-2) + " " +
                ("00" + date.getHours()).slice(-2) + ":" +
                ("00" + date.getMinutes()).slice(-2)
            return dateStr
        }

        connection.on("ReceberMensagem", (mensagem) => {
            console.log(mensagem);
            innerChatId = "chat";
            criarMensagem(mensagem);
        });
        connection.on("ReceberMensagemPrivada", (mensagem, destino) => {
            if (destino != idAtual) {
                innerChatId = "chat-" + destino;
                var objDivPriv = document.getElementById("chatMain-" + destino);
            } else {
                innerChatId = "chat-" + mensagem.usuarioID;
                var objDivPriv = document.getElementById("chatMain-" + mensagem.usuarioID);
            }
            objDivPriv.scrollTop = objDivPriv.scrollHeight;
            console.log(mensagem);
            criarMensagem(mensagem);
        });
        var vezes_carregado = "";
        var ja_carregado = "";
        connection.on("CarregarMensagens", (mensagens, destino) => {
            if (mensagens != null) {
                mensagens.forEach(criarMensagem);
            }
            var objDivPriv = document.getElementById("chatMain-" + destino);
            objDivPriv.scrollTop = objDivPriv.scrollHeight;
        });

        function CarregarChat(destino, destino_user) {
            innerChatId = "chat-" + destino;
            connection.invoke("EntrarGrupo", destino_user);
            var outrosChats = document.getElementsByClassName("privado");
            for (i = 0; i < outrosChats.length; i++) {
                outrosChats[i].style.display = "none";
            }
            document.getElementById(innerChatId).style.display = "block";
            document.getElementById("SendMessageForm-" + destino).style.display = "block";
            document.getElementById("title-" + destino).style.display = "flex";
            document.getElementById("chatMain-" + destino).style.display = "block";
            document.getElementById("container-chat-" + destino).style.display = "flex"
            document.getElementById("container-chat").style.right = "950px";

            var objDivPriv = document.getElementById("chatMain-" + destino);
            objDivPriv.scrollTop = objDivPriv.scrollHeight;

            var botaoMostrar = document.getElementById("mostrarChat-" + destino);
            if (!vezes_carregado.includes(destino)) {
                botaoMostrar.addEventListener("click", () => {
                    if (botaoMostrar.textContent == "+") {

                        botaoMostrar.textContent = "-";
                        document.getElementById("chatMain-" + destino).style.display = "block";
                        document.getElementById("container-chat-" + destino).style.height = "623px"
                        document.getElementById("SendMessageForm-" + destino).style.display = "block";
                        connection.invoke("EntrarGrupo", destino_user);
                    }
                    else {
                        botaoMostrar.textContent = "+";
                        document.getElementById("chatMain-" + destino).style.display = "none";
                        document.getElementById("SendMessageForm-" + destino).style.display = "none";
                        document.getElementById("container-chat-" + destino).style.height = "6vh"
                        ja_carregado = "";
                        connection.invoke("SairGrupo", destino_user);
                    }
                });
                var fecharChat = document.getElementById("fecharChat-" + destino);

                fecharChat.addEventListener("click", () => {
                    document.getElementById("container-chat-" + destino).style.display = "none"
                    document.getElementById("container-chat").style.right = "46vh";
                    ja_carregado = "";
                    connection.invoke("SairGrupo", destino_user);
                });
                vezes_carregado = vezes_carregado + destino;
            }
            connection.invoke("CarregarMensagensEnviadas", idAtual, mensagensAtuais, destino);
        };
    </script>
    @if (Model != null)
    {
        @for (int i = 0; i < Model.Count; i++)
        {
<script>
            document.getElementById("abrirPrivado-@Model[i].Id").addEventListener("click", function (event) {
                event.preventDefault();
                console.log(ja_carregado);
                if (ja_carregado != "@Model[i].Id") {
                    ja_carregado = "@Model[i].Id";
                    CarregarChat("@Model[i].Id", "@Model[i].UserName");
                }
            });
            document.getElementById("SendMessageForm-@Model[i].Id").addEventListener("submit", function (event) {
                event.preventDefault();
                var data = {
                    Texto: document.getElementById("MessageText-@Model[i].Id").value,
                    NomeUsuario: nomeUsuario,
                    AlvoId: "@Model[i].Id",
                    UsuarioID: idAtual
                }

                document.getElementById("MessageText-@Model[i].Id").value = ""
                connection.invoke("enviarMensagensPrivadas", data).catch(function (err) {
                    return console.error(err.toString());
                });
            });
            window.addEventListener("unload", function () {
                connection.invoke("SairGrupo", "@Model[i].UserName");
            });
</script>
        }
    }

@foreach (Mensagem mensagem in mensagens)
{
    <script>
        var mensagemNova = {
            ID: @mensagem.ID,
            Texto: "@mensagem.Texto",
            UsuarioID: "@mensagem.UsuarioID",
            AlvoId: "@mensagem.AlvoId"
        };
        console.log(mensagemNova);
        mensagensAtuais.push(mensagemNova);
    </script>
}

    <!-- Minimizar chat geral -->
    <script>
        function mostrarChat() {
            var mostrarBotao = document.getElementById("mostrarChat");
            if (mostrarBotao.textContent == "+") {
                mostrarBotao.textContent = "-";
                document.getElementById("container-chat").style.height = "623px"
                document.getElementById("chatMain").style.display = "block";
                document.getElementById("title").style.bottom = "570px";
                document.getElementById("SendMessageForm").style.display = "block";
            } else {
                mostrarBotao.textContent = "+";
                document.getElementById("container-chat").style.height = "6vh"
                document.getElementById("chatMain").style.display = "none";
                document.getElementById("title").style.bottom = "0";
                document.getElementById("SendMessageForm").style.display = "none";
            }
        }
    </script>

    <!-- Minimizar lista de amigos -->
    <script>
        function mostrarLista() {
            var mostrarBotao = document.getElementById("mostrarLista");
            if (mostrarBotao.textContent === "+") {
                mostrarBotao.textContent = "-";
                document.getElementById("lista").style.height = "61.6vh"
                document.getElementById("title-amigo").style.bottom = "61.6vh";
                document.getElementById("amigos").style.display = "block";
            } else {
                mostrarBotao.textContent = "+";
                document.getElementById("lista").style.height = "6vh"
                document.getElementById("title-amigo").style.bottom = "0";
                document.getElementById("amigos").style.display = "none";
            }
        }
    </script>
}