@using Microsoft.AspNetCore.Identity
@model List<IdentityUser>
@{
    ViewData["Title"] = "Seu Feed";
    var mensagens = ViewBag.Mensagens as List<Mensagem>;
    var nomeUsuario = ViewBag.nome as string;
    var linkImagemUsuario = ViewBag.LinkImagem as string;
    var Postagens = ViewBag.Postagens as List<Postagem>;
    var linkPerfil = $"/User/Index/{ViewBag.linkPerfil}" as string;
}


<div class="container-feed">
    <main role="main" class="pb-3 container-main">
        <div id="feed">
            <div class="card mb-3">
                <form class="card-body" asp-action="Postar">
                    <div class="mb-3">
                        <label for="InputPost" class="form-label">Postar</label>
                        <textarea class="form-control" id="InputPost" rows="5" name="TxtPost" placeholder="O que você está pensando?"></textarea>
                        <label for="InputPost" class="form-label">Link da imagem (Opcional)</label>
                        <input class="form-control" name="ImgPost" placeholder="Link da imagem aqui..." />
                    </div>
                    <button type="submit" class="btn btn-info">Postar</button>
                </form>
            </div>
            @if (Postagens != null)
            {
                @foreach (Postagem postagem in Postagens)
                {
                    if (Model.Contains(postagem.UsuarioPost) || postagem.UsuarioIdPost == ViewBag.linkPerfil) { 
                        <div class="card mb-3">
                            <div class="card-body">
                                <h5 class="card-title">@postagem.UsuarioPost.UserName <small class="text-muted">@postagem.DataPostagem</small></h5>
                                <p class="card-text">@postagem.Texto</p>
                                <p class="card-text"></p>
                                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-hand-thumbs-up" viewBox="0 0 16 16">
                                    <path d="M8.864.046C7.908-.193 7.02.53 6.956 1.466c-.072 1.051-.23 2.016-.428 2.59-.125.36-.479 1.013-1.04 1.639-.557.623-1.282 1.178-2.131 1.41C2.685 7.288 2 7.87 2 8.72v4.001c0 .845.682 1.464 1.448 1.545 1.07.114 1.564.415 2.068.723l.048.03c.272.165.578.348.97.484.397.136.861.217 1.466.217h3.5c.937 0 1.599-.477 1.934-1.064a1.86 1.86 0 0 0 .254-.912c0-.152-.023-.312-.077-.464.201-.263.38-.578.488-.901.11-.33.172-.762.004-1.149.069-.13.12-.269.159-.403.077-.27.113-.568.113-.857 0-.288-.036-.585-.113-.856a2.144 2.144 0 0 0-.138-.362 1.9 1.9 0 0 0 .234-1.734c-.206-.592-.682-1.1-1.2-1.272-.847-.282-1.803-.276-2.516-.211a9.84 9.84 0 0 0-.443.05 9.365 9.365 0 0 0-.062-4.509A1.38 1.38 0 0 0 9.125.111L8.864.046zM11.5 14.721H8c-.51 0-.863-.069-1.14-.164-.281-.097-.506-.228-.776-.393l-.04-.024c-.555-.339-1.198-.731-2.49-.868-.333-.036-.554-.29-.554-.55V8.72c0-.254.226-.543.62-.65 1.095-.3 1.977-.996 2.614-1.708.635-.71 1.064-1.475 1.238-1.978.243-.7.407-1.768.482-2.85.025-.362.36-.594.667-.518l.262.066c.16.04.258.143.288.255a8.34 8.34 0 0 1-.145 4.725.5.5 0 0 0 .595.644l.003-.001.014-.003.058-.014a8.908 8.908 0 0 1 1.036-.157c.663-.06 1.457-.054 2.11.164.175.058.45.3.57.65.107.308.087.67-.266 1.022l-.353.353.353.354c.043.043.105.141.154.315.048.167.075.37.075.581 0 .212-.027.414-.075.582-.05.174-.111.272-.154.315l-.353.353.353.354c.047.047.109.177.005.488a2.224 2.224 0 0 1-.505.805l-.353.353.353.354c.006.005.041.05.041.17a.866.866 0 0 1-.121.416c-.165.288-.503.56-1.066.56z" />
                                </svg>
                            </div>
                            @if (postagem.UrlImagem != null)
                            {
                                <img src="@postagem.UrlImagem" class="card-img-bottom">
                            }
                        </div>
                    }
                }
            }
        </div>
    </main>
</div>
@{
    #region Chat geral

    <!-- Configurações CSS estão em wwwroot/css/site.css -->
    <div class="container-chat" id="container-chat">
        <div class="chat-title title" id="title">
            Chat global
            <button type="submit" class="mostrarChat" id="mostrarChat" onclick="mostrarChat()">-</button>
        </div>
        <div class="chat" id="chatMain">
            <div class="inner-chat" id="chat">
                @if (mensagens != null)
                {
                    @foreach (var mensagem in mensagens.OrderBy(m => m.DataEnvio))
                    {
                        if (mensagem.AlvoId == null)
                        {
                            var position = ViewBag.linkPerfil == mensagem.UsuarioID ? "text-right" : "text-left";
                            var alert = ViewBag.linkPerfil == mensagem.UsuarioID ? "alert-light" : "alert-dark";
                            <div class="row">
                                <div class="col-md-12 @position">
                                    <a asp-controller="User" asp-action="Index" asp-route-id="@mensagem.UsuarioID">
                                        <img src="@mensagem.usuario.LinkImagem" class="usuario-imagem @position" />
                                        <small class="text-dark">@mensagem.NomeUsuario</small>
                                    </a>
                                    <div class="alert mb-0 @alert" role="alert">
                                        <span class="d-block">@mensagem.Texto</span>
                                    </div>
                                    <small class="text-info">@mensagem.DataEnvio.ToString("dd/MM HH:mm")</small>
                                </div>
                            </div>
                        }
                    }
                }
            </div>
        </div>
        <form asp-action="EnviarMensagem" id="SendMessageForm" class="row enviar">
            <div class="input-group col-md-12 mb-4">
                <input name="Texto" id="MessageText" class="form-control" />
                <button type="submit" id="submitBtn" class="btn btn-info" value="">Enviar</button>
            </div>
        </form>
    </div>
    #endregion
}

@{
    #region Lista de amigos
    <div class="lista-amigos" id="lista">
        <div class="friend-title title" id="title-amigo">
            Lista de amigos @Model.Count
            <button class="mostrarChat" id="mostrarLista" onclick="mostrarLista()">-</button>
        </div>
        @if (Model != null)
        {
            <ul class="list-group" id="amigos">
                @foreach (Usuario amigo in Model)
                {

                    <li id="abrirPrivado-@amigo.Id" class="list-group-item d-flex justify-content-between align-items-center abrir-chat">
                        <a asp-controller="User" asp-action="Index" asp-route-id="@amigo.Id">
                            <img src="@amigo.LinkImagem" class="usuario-imagem" />
                            @amigo.UserName
                        </a>
                    </li>

                }
            </ul>
        }
    </div>
    #endregion
    #region Chats privados

    if (Model != null)
    {
        @foreach (Usuario amigo in Model)
        {
            <div class="container-chat privado" id="container-chat-@amigo.Id">
                <div class="chat-title title" id="title-@amigo.Id">
                    Chat com @amigo.UserName
                    <div>
                        <button type="submit" class="mostrarChat" id="mostrarChat-@amigo.Id">-</button>
                        <button type="submit" class="mostrarChat" id="fecharChat-@amigo.Id">x</button>
                    </div>
                </div>
                <div class="chat" id="chatMain-@amigo.Id">
                    <div class="inner-chat" id="chat-@amigo.Id">
                        @if (mensagens != null)
                        {
                            @foreach (Mensagem mensagem in mensagens.Where(m => m.AlvoId == amigo.Id && m.UsuarioID == ViewBag.linkPerfil || m.UsuarioID == amigo.Id && m.AlvoId == ViewBag.linkPerfil))
                            {
                                var position = ViewBag.linkPerfil == mensagem.UsuarioID ? "text-right" : "text-left";
                                var alert = ViewBag.linkPerfil == mensagem.UsuarioID ? "alert-light" : "alert-dark";
                                <div class="row">
                                    <div class="col-md-12 @position">
                                        <a asp-controller="User" asp-action="Index" asp-route-id="@mensagem.UsuarioID">
                                            <img src="@mensagem.usuario.LinkImagem" class="usuario-imagem @position" />
                                            <small class="text-dark">@mensagem.NomeUsuario</small>
                                        </a>
                                        <div class="alert mb-0 @alert" role="alert">
                                            <span class="d-block">@mensagem.Texto</span>
                                        </div>
                                        <small class="text-info">@mensagem.DataEnvio.ToString("dd/MM HH:mm")</small>
                                    </div>
                                </div>
                            }
                        }
                    </div>
                </div>
                <form asp-action="EnviarMensagem" id="SendMessageForm-@amigo.Id" class="row enviar">
                    <div class="input-group col-md-12">
                        <input name="Texto" id="MessageText-@amigo.Id" class="form-control" />
                        <button type="submit" id="submitBtn" class="btn btn-info" value="">Enviar</button>
                    </div>
                </form>
            </div>
        }
    }
    #endregion
}



@section scripts
{
    <!-- Chat geral -->
    <script>
        var nomeUsuario = "@nomeUsuario";
        var linkImagemUsuario = "@linkImagemUsuario";
        var linkPerfil = "@linkPerfil";
        var idAtual = "@ViewBag.linkPerfil";
        var objDiv = document.getElementById("chatMain");
        var mensagensAtuais = [];
        objDiv.scrollTop = objDiv.scrollHeight;

        /*Construir e estilizar mensagens novas enviadas por websocket*/
        function formatDate(dateString) {
            var date = new Date(Date.parse(dateString))
            var dateStr =
                ("00" + date.getDate()).slice(-2) + "/" +
                ("00" + (date.getMonth() + 1)).slice(-2) + " " +
                ("00" + date.getHours()).slice(-2) + ":" +
                ("00" + date.getMinutes()).slice(-2)
            return dateStr
        }

        connection.on("ReceberMensagem", (mensagem) => {
            console.log(mensagem);
            innerChatId = "chat";
            criarMensagem(mensagem);
        });
        connection.on("ReceberMensagemPrivada", (mensagem, destino) => {
            if (destino != idAtual) {
                innerChatId = "chat-" + destino;
                var objDivPriv = document.getElementById("chatMain-" + destino);
            } else {
                innerChatId = "chat-" + mensagem.usuarioID;
                var objDivPriv = document.getElementById("chatMain-" + mensagem.usuarioID);
            }
            objDivPriv.scrollTop = objDivPriv.scrollHeight;
            console.log(mensagem);
            criarMensagem(mensagem);
        });
        var vezes_carregado = "";
        var ja_carregado = "";
        connection.on("CarregarMensagens", (mensagens, destino) => {
            if (mensagens != null) {
                mensagens.forEach(criarMensagem);
            }
            var objDivPriv = document.getElementById("chatMain-" + destino);
            objDivPriv.scrollTop = objDivPriv.scrollHeight;
        });

        function CarregarChat(destino, destino_user) {
            innerChatId = "chat-" + destino;
            connection.invoke("EntrarGrupo", destino_user);
            var outrosChats = document.getElementsByClassName("privado");
            for (i = 0; i < outrosChats.length; i++) {
                outrosChats[i].style.display = "none";
            }
            document.getElementById(innerChatId).style.display = "block";
            document.getElementById("SendMessageForm-" + destino).style.display = "block";
            document.getElementById("title-" + destino).style.display = "flex";
            document.getElementById("chatMain-" + destino).style.display = "block";
            document.getElementById("container-chat-" + destino).style.display = "flex"
            document.getElementById("container-chat").style.right = "950px";

            var objDivPriv = document.getElementById("chatMain-" + destino);
            objDivPriv.scrollTop = objDivPriv.scrollHeight;

            var botaoMostrar = document.getElementById("mostrarChat-" + destino);
            if (!vezes_carregado.includes(destino)) {
                botaoMostrar.addEventListener("click", () => {
                    if (botaoMostrar.textContent == "+") {

                        botaoMostrar.textContent = "-";
                        document.getElementById("chatMain-" + destino).style.display = "block";
                        document.getElementById("container-chat-" + destino).style.height = "623px"
                        document.getElementById("SendMessageForm-" + destino).style.display = "block";
                        connection.invoke("EntrarGrupo", destino_user);
                    }
                    else {
                        botaoMostrar.textContent = "+";
                        document.getElementById("chatMain-" + destino).style.display = "none";
                        document.getElementById("SendMessageForm-" + destino).style.display = "none";
                        document.getElementById("container-chat-" + destino).style.height = "6vh"
                        ja_carregado = "";
                        connection.invoke("SairGrupo", destino_user);
                    }
                });
                var fecharChat = document.getElementById("fecharChat-" + destino);

                fecharChat.addEventListener("click", () => {
                    document.getElementById("container-chat-" + destino).style.display = "none"
                    document.getElementById("container-chat").style.right = "46vh";
                    ja_carregado = "";
                    connection.invoke("SairGrupo", destino_user);
                });
                vezes_carregado = vezes_carregado + destino;
            }
            connection.invoke("CarregarMensagensEnviadas", idAtual, mensagensAtuais, destino);
        };
    </script>
    @if (Model != null)
    {
        @for (int i = 0; i < Model.Count; i++)
        {
<script>
            document.getElementById("abrirPrivado-@Model[i].Id").addEventListener("click", function (event) {
                event.preventDefault();
                console.log(ja_carregado);
                if (ja_carregado != "@Model[i].Id") {
                    ja_carregado = "@Model[i].Id";
                    CarregarChat("@Model[i].Id", "@Model[i].UserName");
                }
            });
            document.getElementById("SendMessageForm-@Model[i].Id").addEventListener("submit", function (event) {
                event.preventDefault();
                var data = {
                    Texto: document.getElementById("MessageText-@Model[i].Id").value,
                    NomeUsuario: nomeUsuario,
                    AlvoId: "@Model[i].Id",
                    UsuarioID: idAtual
                }

                document.getElementById("MessageText-@Model[i].Id").value = ""
                connection.invoke("enviarMensagensPrivadas", data).catch(function (err) {
                    return console.error(err.toString());
                });
            });
            window.addEventListener("unload", function () {
                connection.invoke("SairGrupo", "@Model[i].UserName");
            });
</script>
        }
    }

@foreach (Mensagem mensagem in mensagens)
{
    <script>
        var mensagemNova = {
            ID: @mensagem.ID,
            Texto: "@mensagem.Texto",
            UsuarioID: "@mensagem.UsuarioID",
            AlvoId: "@mensagem.AlvoId"
        };
        console.log(mensagemNova);
        mensagensAtuais.push(mensagemNova);
    </script>
}

    <!-- Minimizar chat geral -->
    <script>
        function mostrarChat() {
            var mostrarBotao = document.getElementById("mostrarChat");
            if (mostrarBotao.textContent == "+") {
                mostrarBotao.textContent = "-";
                document.getElementById("container-chat").style.height = "623px"
                document.getElementById("chatMain").style.display = "block";
                document.getElementById("title").style.bottom = "570px";
                document.getElementById("SendMessageForm").style.display = "block";
            } else {
                mostrarBotao.textContent = "+";
                document.getElementById("container-chat").style.height = "6vh"
                document.getElementById("chatMain").style.display = "none";
                document.getElementById("title").style.bottom = "0";
                document.getElementById("SendMessageForm").style.display = "none";
            }
        }
    </script>

    <!-- Minimizar lista de amigos -->
    <script>
        function mostrarLista() {
            var mostrarBotao = document.getElementById("mostrarLista");
            if (mostrarBotao.textContent === "+") {
                mostrarBotao.textContent = "-";
                document.getElementById("lista").style.height = "61.6vh"
                document.getElementById("title-amigo").style.bottom = "61.6vh";
                document.getElementById("amigos").style.display = "block";
            } else {
                mostrarBotao.textContent = "+";
                document.getElementById("lista").style.height = "6vh"
                document.getElementById("title-amigo").style.bottom = "0";
                document.getElementById("amigos").style.display = "none";
            }
        }
    </script>
}